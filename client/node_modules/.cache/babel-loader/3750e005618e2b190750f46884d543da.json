{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD600\\uB098\\\\Desktop\\\\React Project\\\\mykitchenlog\\\\client\\\\src\\\\Components\\\\View\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport \"../../../App.css\";\nimport { observer } from \"mobx-react\";\nimport store from \"../../../Store/store\";\nimport { useEffect, useState } from \"react\";\nimport Search from \"./Search\"; // 검색 기능 onBlur로 구현하여 검색 버튼 두번 눌러야 하는 문제. 수정 필요.\n// 수정버튼 클릭 시, 태그 2개 이상인 게시물은 업로드 안되는 문제. 수정 필요.\n\nconst Main = ({\n  searchstatus,\n  SetSearchstatus\n}) => {\n  _s();\n\n  // (GET) serer로부터 data 불러오기\n  useEffect(() => {\n    store.LoadData();\n  }, []); // console.log(store.getBlogData)\n  // 검색어 매칭\n\n  const [searchword, setSearchword] = useState();\n  const result = store.getBlogData.filter(function (v) {\n    return searchword !== undefined && v.tag.includes(searchword);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MainDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, searchstatus === true ? /*#__PURE__*/React.createElement(Search, {\n    searchword: searchword,\n    setSearchword: setSearchword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }\n  }) : null, searchword !== undefined ? result.map(blogData => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `Detail/${blogData.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Mainlistdiv\",\n      key: blogData.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mainimg\",\n      src: blogData.imgURL,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"Mainlisth3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, blogData.title), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Maintagh4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, blogData.tag.length !== 0 && blogData.tag.map(v => {\n      return ` #${v}`;\n    }))));\n  }) : store.getBlogData.map(blogData => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `Detail/${blogData.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Mainlistdiv\",\n      key: blogData.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mainimg\",\n      src: blogData.imgURL,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"Mainlisth3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, blogData.title), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Maintagh4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, blogData.tag.length !== 0 && blogData.tag.map(v => {\n      return ` #${v}`;\n    }))));\n  })));\n};\n\n_s(Main, \"vOJl9WPI/yKa6QJ7+BEnWVUOjmA=\");\n\n_c = Main;\nexport default _c2 = observer(Main);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/혀나/Desktop/React Project/mykitchenlog/client/src/Components/View/Main/Main.js"],"names":["Link","observer","store","useEffect","useState","Search","Main","searchstatus","SetSearchstatus","LoadData","searchword","setSearchword","result","getBlogData","filter","v","undefined","tag","includes","map","blogData","id","imgURL","title","length"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"../../../App.css\";\r\nimport { observer } from \"mobx-react\";\r\nimport store from \"../../../Store/store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\n// 검색 기능 onBlur로 구현하여 검색 버튼 두번 눌러야 하는 문제. 수정 필요.\r\n// 수정버튼 클릭 시, 태그 2개 이상인 게시물은 업로드 안되는 문제. 수정 필요.\r\n\r\nconst Main = ({searchstatus, SetSearchstatus}) => {\r\n\r\n  // (GET) serer로부터 data 불러오기\r\n  useEffect(() => {\r\n    store.LoadData();\r\n  }, []);\r\n  // console.log(store.getBlogData)\r\n\r\n  // 검색어 매칭\r\n  const [searchword , setSearchword] = useState();\r\n  const result = store.getBlogData.filter(function (v) {\r\n    return searchword !== undefined && (v.tag.includes(searchword))\r\n  });\r\n\r\n  return (\r\n    <div className=\"MainDiv\">\r\n      <div className=\"Contents\">\r\n      {searchstatus === true ? <Search searchword={searchword} setSearchword={setSearchword} /> : null}\r\n        {searchword !== undefined ?\r\n         result.map((blogData) => {\r\n          return (\r\n            <Link to={`Detail/${blogData.id}`}>\r\n              <div className=\"Mainlistdiv\" key={blogData.id}>\r\n                <img className=\"mainimg\" src={blogData.imgURL} alt=\"img\"/>\r\n                <h3 className=\"Mainlisth3\">\r\n                  {blogData.title}\r\n                </h3>\r\n                <h4 className=\"Maintagh4\">\r\n                  {blogData.tag.length !== 0 &&\r\n                    blogData.tag.map((v) => {\r\n                      return ` #${v}`;\r\n                    })}\r\n                </h4>\r\n              </div>\r\n            </Link>\r\n          );\r\n          })\r\n        : store.getBlogData.map((blogData) => {\r\n          return (\r\n            <Link to={`Detail/${blogData.id}`}>\r\n              <div className=\"Mainlistdiv\" key={blogData.id}>\r\n                <img className=\"mainimg\" src={blogData.imgURL} alt=\"img\"/>\r\n                <h3 className=\"Mainlisth3\">\r\n                  {blogData.title}\r\n                </h3>\r\n                <h4 className=\"Maintagh4\">\r\n                  {blogData.tag.length !== 0 &&\r\n                    blogData.tag.map((v) => {\r\n                      return ` #${v}`;\r\n                    })}\r\n                </h4>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default observer(Main);\r\n"]},"metadata":{},"sourceType":"module"}