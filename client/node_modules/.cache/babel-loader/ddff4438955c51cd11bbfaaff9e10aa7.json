{"ast":null,"code":"import { makeObservable, observable, action, computed, toJS } from \"mobx\";\nimport axios from \"axios\";\n\nclass store {\n  constructor() {\n    this.blogData = [];\n\n    this.LoadData = () => {\n      axios.get(\"http://localhost:3001/posts\").then(response => {\n        this.blogData = response.data;\n        console.log(\"Load성공\", toJS(this.blogData));\n      }).catch(err => {\n        console.log(\"Load실패\", err);\n      });\n    };\n\n    this.AddData = data => {\n      console.log(\"AddData로 들어온 data\", data);\n      axios.post(\"http://localhost:3001/posts\", { ...data\n      }).then(function (response) {\n        console.log(\"Add성공\", response);\n      }).catch(function (error) {\n        console.log(\"Add실패\", error);\n      });\n    };\n\n    this.EditData = (currentid, data) => {\n      console.log(\"EditData로 들어온 data\", data);\n      console.log(\"EditData로 들어온 currentid\", currentid);\n      axios.patch(`http://localhost:3001/posts/${currentid}`, { ...data\n      }).then(function (response) {\n        console.log(\"수정성공\", response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.DeleteData = currentid => {\n      console.log(\"DeleteData로 들어온 currentid\", currentid);\n      axios.delete(`http://localhost:3001/posts/${currentid}`).then(response => {\n        console.log(\"Delete완료\", response);\n      }).catch(function (error) {\n        console.log(\"Delete실패\", error);\n      });\n    };\n\n    makeObservable(this, {\n      blogData: observable,\n      LoadData: action,\n      AddData: action,\n      EditData: action,\n      DeleteData: action,\n      getBlogData: computed\n    });\n  }\n\n  get getBlogData() {\n    return this.blogData;\n  }\n\n}\n\nconst myStore = new store();\nexport default myStore;","map":{"version":3,"sources":["C:/Users/혀나/Desktop/React Project/mykitchenlog/client/src/Store/store.js"],"names":["makeObservable","observable","action","computed","toJS","axios","store","constructor","blogData","LoadData","get","then","response","data","console","log","catch","err","AddData","post","error","EditData","currentid","patch","DeleteData","delete","getBlogData","myStore"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuDC,IAAvD,QAAmE,MAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,CAAY;AAGVC,EAAAA,WAAW,GAAG;AAAA,SAFdC,QAEc,GAFH,EAEG;;AAAA,SAcdC,QAdc,GAcH,MAAM;AACfJ,MAAAA,KAAK,CACFK,GADH,CACO,6BADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,aAAKJ,QAAL,GAAgBI,QAAQ,CAACC,IAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,IAAI,CAAC,KAAKI,QAAN,CAA1B;AACD,OALH,EAMGQ,KANH,CAMUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBE,GAArB;AACD,OARH;AASD,KAxBa;;AAAA,SA6BdC,OA7Bc,GA6BHL,IAAD,IAAU;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAjC;AACAR,MAAAA,KAAK,CACFc,IADH,CACQ,6BADR,EACuC,EACnC,GAAGN;AADgC,OADvC,EAIGF,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,QAArB;AACD,OANH,EAOGI,KAPH,CAOS,UAAUI,KAAV,EAAiB;AACtBN,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBK,KAApB;AACD,OATH;AAUD,KAzCa;;AAAA,SA2CdC,QA3Cc,GA2CH,CAACC,SAAD,EAAWT,IAAX,KAAoB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,SAAvC;AACAjB,MAAAA,KAAK,CACJkB,KADD,CACQ,+BAA8BD,SAAU,EADhD,EACmD,EACjD,GAAGT;AAD8C,OADnD,EAICF,IAJD,CAIM,UAAUC,QAAV,EAAoB;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,QAApB;AACD,OAND,EAOCI,KAPD,CAOO,UAAUI,KAAV,EAAiB;AACtBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,OATD;AAUD,KAxDa;;AAAA,SA0DdI,UA1Dc,GA0DAF,SAAD,IAAe;AAC1BR,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCO,SAAzC;AACAjB,MAAAA,KAAK,CACFoB,MADH,CACW,+BAA8BH,SAAU,EADnD,EAEGX,IAFH,CAESC,QAAD,IAAc;AAClBE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,QAAvB;AACD,OAJH,EAKGI,KALH,CAKS,UAAUI,KAAV,EAAiB;AACtBN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBK,KAAvB;AACD,OAPH;AAQD,KApEa;;AACZpB,IAAAA,cAAc,CAAC,IAAD,EAAO;AAEnBQ,MAAAA,QAAQ,EAAEP,UAFS;AAInBQ,MAAAA,QAAQ,EAAEP,MAJS;AAKnBgB,MAAAA,OAAO,EAAEhB,MALU;AAMnBmB,MAAAA,QAAQ,EAAEnB,MANS;AAOnBsB,MAAAA,UAAU,EAAEtB,MAPO;AASnBwB,MAAAA,WAAW,EAAEvB;AATM,KAAP,CAAd;AAWD;;AAac,MAAXuB,WAAW,GAAG;AAChB,WAAO,KAAKlB,QAAZ;AACD;;AA9BS;;AA2EZ,MAAMmB,OAAO,GAAG,IAAIrB,KAAJ,EAAhB;AAEA,eAAeqB,OAAf","sourcesContent":["import { makeObservable, observable, action, computed, toJS } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nclass store {\r\n  blogData = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n      blogData: observable,\r\n\r\n      LoadData: action,\r\n      AddData: action,\r\n      EditData: action,\r\n      DeleteData: action,\r\n   \r\n      getBlogData: computed\r\n    });\r\n  }\r\n\r\n  LoadData = () => {\r\n    axios\r\n      .get(\"http://localhost:3001/posts\")\r\n      .then((response) => {\r\n        this.blogData = response.data;\r\n        console.log(\"Load성공\", toJS(this.blogData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Load실패\",err);\r\n      });\r\n  };\r\n  get getBlogData() {\r\n    return this.blogData;\r\n  }\r\n\r\n  AddData = (data) => {\r\n    console.log(\"AddData로 들어온 data\", data);\r\n    axios\r\n      .post(\"http://localhost:3001/posts\", {\r\n        ...data,\r\n      })\r\n      .then(function (response) {\r\n        console.log(\"Add성공\", response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Add실패\",error);\r\n      });\r\n  };\r\n\r\n  EditData = (currentid,data) => {\r\n    console.log(\"EditData로 들어온 data\", data);\r\n    console.log(\"EditData로 들어온 currentid\", currentid);\r\n    axios\r\n    .patch(`http://localhost:3001/posts/${currentid}`, {\r\n      ...data,\r\n    })\r\n    .then(function (response) {\r\n      console.log(\"수정성공\", response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  DeleteData = (currentid) => {\r\n    console.log(\"DeleteData로 들어온 currentid\", currentid);\r\n    axios\r\n      .delete(`http://localhost:3001/posts/${currentid}`)\r\n      .then((response) => {\r\n        console.log(\"Delete완료\",response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Delete실패\",error)\r\n      })\r\n  }\r\n\r\n\r\n}\r\nconst myStore = new store();\r\n\r\nexport default myStore;\r\n"]},"metadata":{},"sourceType":"module"}