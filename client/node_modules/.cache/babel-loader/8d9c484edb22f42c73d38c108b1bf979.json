{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD600\\uB098\\\\Desktop\\\\React Project\\\\mykitchenlog\\\\client\\\\src\\\\Components\\\\View\\\\Main\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport store from \"../../../Store/store\";\nimport { observer } from \"mobx-react\";\n\nfunction Edit() {\n  _s();\n\n  // (GET) serer로부터 data 불러오기\n  useEffect(() => {\n    store.LoadData();\n  }, []); // console.log(store.getBlogData)\n  // Click한 ID정보 받아오기\n\n  const currentid = Number(useParams().id); // console.log(\"클릭한 게시물의 ID는\", currentid);\n\n  const postFilter = store.getBlogData.filter(value => {\n    // console.log(\"postFilter: \", value);\n    return value.id === Number(currentid);\n  }); // 날짜정보얻기\n\n  const currentDate = new Date();\n  const cYear = currentDate.getFullYear();\n  const cMonth = currentDate.getMonth() + 1;\n  const cDate = currentDate.getDate();\n  const cHour = currentDate.getHours();\n  const cMin = currentDate.getMinutes();\n  const editTime = `${cYear}년 ${cMonth}월 ${cDate}일 ${cHour}시 ${cMin}분`; // Post 수정하기\n\n  const [loadfile, setLoadfile] = useState();\n  const [currentURL, setCurrentURL] = useState();\n  const currentTitle = postFilter.length !== 0 && postFilter[0].title;\n  const currentTag = postFilter.length !== 0 && postFilter[0].tag;\n  const currentContents = postFilter.length !== 0 && postFilter[0].contents;\n  const [modititle, setModititle] = useState(currentTitle);\n  const [moditag, setModitag] = useState(currentTag);\n  const [modicontents, setModicontents] = useState(currentContents);\n  const [modiURL, setModiURL] = useState(currentURL); // user가 작성한 input 받아오기\n\n  const EditTitle = event => {\n    setModititle(event.target.value);\n  };\n\n  const EditTag = event => {\n    setModitag(event.target.value);\n  };\n\n  const EditContents = event => {\n    setModicontents(event.target.value);\n  };\n\n  const EditURL = event => {\n    setLoadfile(URL.createObjectURL(event.target.files[0]));\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(event.target.files[0]);\n\n    fileReader.onload = function (event) {\n      setCurrentURL(event.target.result);\n      setModiURL(event.target.value);\n    };\n  }; // 해시태그 기능\n\n\n  const [tagList, setTagList] = useState([]);\n\n  const Keypress = e => {\n    if (e.key === \"Enter\" || e.code === \"Space\") {\n      setTagList(tagList => [...tagList, moditag]);\n      setModitag(\"\");\n      e.preventDefault();\n    }\n\n    console.log(\"태그리스트\", tagList);\n  }; // (PUT/PATCH) server로 data 수정 요청\n\n\n  const modifiyData = () => {\n    const mappingData = {\n      date: editTime,\n      title: modititle === false ? currentTitle : modititle,\n      tag: tagList.length === 0 ? currentTag : tagList,\n      contents: modicontents === false ? currentContents : modicontents,\n      imgURL: modiURL === undefined ? currentURL : modiURL\n    };\n    store.EditData(currentid, mappingData);\n  };\n\n  return postFilter.length !== 0 &&\n  /*#__PURE__*/\n  // 수정\n  React.createElement(\"div\", {\n    className: \"EditDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"EditTitle\",\n    name: \"title\",\n    onChange: EditTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, currentTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"EditTagDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"EditTag\",\n    name: \"tag\",\n    onChange: EditTag,\n    onKeyPress: Keypress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, moditag === false ? currentTag : moditag), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"EditTagShowDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, tagList.length !== 0 && tagList.map((v, i) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"hash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }\n    }, \"#\", tagList[i], \" \");\n  }))), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"EditContents\",\n    name: \"contents\",\n    onChange: EditContents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, currentContents), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"EditBtnDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: loadfile,\n    alt: \"Img URL\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: EditURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"EditBtn\",\n    onClick: modifiyData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Post\"))));\n}\n\n_s(Edit, \"EpKnmFP27V02IL/tIoDDQ7l1p8Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\nexport default _c2 = observer(Edit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Edit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/혀나/Desktop/React Project/mykitchenlog/client/src/Components/View/Main/Edit.js"],"names":["Link","useParams","React","useState","useEffect","store","observer","Edit","LoadData","currentid","Number","id","postFilter","getBlogData","filter","value","currentDate","Date","cYear","getFullYear","cMonth","getMonth","cDate","getDate","cHour","getHours","cMin","getMinutes","editTime","loadfile","setLoadfile","currentURL","setCurrentURL","currentTitle","length","title","currentTag","tag","currentContents","contents","modititle","setModititle","moditag","setModitag","modicontents","setModicontents","modiURL","setModiURL","EditTitle","event","target","EditTag","EditContents","EditURL","URL","createObjectURL","files","fileReader","FileReader","readAsDataURL","onload","result","tagList","setTagList","Keypress","e","key","code","preventDefault","console","log","modifiyData","mappingData","date","imgURL","undefined","EditData","map","v","i"],"mappings":"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","sourcesContent":["import { Link, useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport store from \"../../../Store/store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction Edit() {\r\n  // (GET) serer로부터 data 불러오기\r\n  useEffect(() => {\r\n    store.LoadData();\r\n  }, []);\r\n  // console.log(store.getBlogData)\r\n\r\n  // Click한 ID정보 받아오기\r\n  const currentid = Number(useParams().id);\r\n  // console.log(\"클릭한 게시물의 ID는\", currentid);\r\n  const postFilter = store.getBlogData.filter((value) => {\r\n    // console.log(\"postFilter: \", value);\r\n    return value.id === Number(currentid);\r\n  });\r\n\r\n  // 날짜정보얻기\r\n  const currentDate = new Date();\r\n  const cYear = currentDate.getFullYear();\r\n  const cMonth = currentDate.getMonth() + 1;\r\n  const cDate = currentDate.getDate();\r\n  const cHour = currentDate.getHours();\r\n  const cMin = currentDate.getMinutes();\r\n  const editTime = `${cYear}년 ${cMonth}월 ${cDate}일 ${cHour}시 ${cMin}분`;\r\n\r\n  // Post 수정하기\r\n  const [loadfile, setLoadfile] = useState();\r\n  const [currentURL, setCurrentURL] = useState();\r\n  const currentTitle = postFilter.length !== 0 && postFilter[0].title;\r\n  const currentTag = postFilter.length !== 0 && postFilter[0].tag;\r\n  const currentContents = postFilter.length !== 0 && postFilter[0].contents;\r\n  const [modititle, setModititle] = useState(currentTitle);\r\n  const [moditag, setModitag] = useState(currentTag);\r\n  const [modicontents, setModicontents] = useState(currentContents);\r\n  const [modiURL, setModiURL] = useState(currentURL);\r\n\r\n  // user가 작성한 input 받아오기\r\n  const EditTitle = (event) => {\r\n    setModititle(event.target.value);\r\n  };\r\n  const EditTag = (event) => {\r\n    setModitag(event.target.value);\r\n  };\r\n  const EditContents = (event) => {\r\n    setModicontents(event.target.value);\r\n  };\r\n  const EditURL = (event) => {\r\n    setLoadfile(URL.createObjectURL(event.target.files[0]));\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsDataURL(event.target.files[0]);\r\n    fileReader.onload = function (event) {\r\n      setCurrentURL(event.target.result);\r\n      setModiURL(event.target.value);\r\n    };\r\n  };\r\n\r\n  // 해시태그 기능\r\n  const [tagList, setTagList] = useState([]);\r\n  const Keypress = (e) => {\r\n    if (e.key === \"Enter\" || e.code === \"Space\") {\r\n      setTagList((tagList) => [...tagList, moditag]);\r\n      setModitag(\"\");\r\n      e.preventDefault();\r\n    }\r\n    console.log(\"태그리스트\", tagList);\r\n  };\r\n\r\n  // (PUT/PATCH) server로 data 수정 요청\r\n  const modifiyData = () => {\r\n    const mappingData = {\r\n      date: editTime,\r\n      title: modititle === false ? currentTitle : modititle,\r\n      tag: tagList.length === 0 ? currentTag : tagList,\r\n      contents: modicontents === false ? currentContents : modicontents,\r\n      imgURL: modiURL === undefined ? currentURL : modiURL,\r\n    };\r\n    store.EditData(currentid, mappingData);\r\n  };\r\n\r\n  return (\r\n    postFilter.length !== 0 && (\r\n      // 수정\r\n      <div className=\"EditDiv\">\r\n        <textarea className=\"EditTitle\" name=\"title\" onChange={EditTitle}>\r\n          {currentTitle}\r\n        </textarea>\r\n        <div className=\"EditTagDiv\">\r\n          <textarea className=\"EditTag\" name=\"tag\" onChange={EditTag} onKeyPress={Keypress}>\r\n            {moditag === false ? currentTag : moditag}\r\n          </textarea>\r\n          <div className=\"EditTagShowDiv\">\r\n            {tagList.length !== 0 &&\r\n              tagList.map((v, i) => {\r\n                return <span className=\"hash\">#{tagList[i]} </span>;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <textarea className=\"EditContents\" name=\"contents\" onChange={EditContents}>\r\n          {currentContents}\r\n        </textarea>\r\n        <div className=\"EditBtnDiv\">\r\n          <img src={loadfile} alt=\"Img URL\" width=\"100px\" />\r\n          <input type=\"file\" accept=\"image/*\" onChange={EditURL} />\r\n          <Link to=\"/\">\r\n            <button className=\"EditBtn\" onClick={modifiyData}>Post</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default observer(Edit);\r\n"]},"metadata":{},"sourceType":"module"}